# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/fedora-27"

	# https://stefanscherer.github.io/access-private-github-repos-in-vagrant-up/
	config.ssh.forward_agent = true

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  config.vm.network "public_network", :mac => "080027375566", bridge: "eno1"
	config.vm.hostname = "fedora27"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    # vb.gui = true
 
    # Customize the amount of memory on the VM:
    vb.memory = "4096"
		vb.cpus = 2
  end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
		##################################
		# Install and Configure system stuff
		##################################
		sudo dnf install -y patch dkms automake gcc-c++ cmake python-devel python3-devel
		sudo dnf install -y git
		sudo dnf install -y ruby ruby-devel
		sudo gem install sass --no-user-install

		sudo dnf install -y php php-tidy php-xml php-fpm php-common php-pdo php-pdo_mysql
		sudo dnf install -y nginx
	
		sudo dnf install -y npm rsync fontconfig ssmtp sharutils

		sudo dnf install -y fedora-workstation-repositories
		sudo dnf config-manager --set-enabled google-chrome
		sudo dnf install -y google-chrome-stable

		# Stuff for Colin	
		sudo dnf upgrade -y vim-minimal dnf install -y vim-enhanced
		sudo dnf install -y vim

		sudo dnf install -y https://dev.mysql.com/get/mysql80-community-release-fc27-1.noarch.rpm
		sudo dnf install -y mysql-community-server
  SHELL
  config.vm.provision "shell", privileged: false, inline: <<-SHELL
		##################################
		# Clone and build
		##################################

		######
    # Some env stuff
    echo "export EMAIL_ADDRESS='notify@datatables.net'" >> ~/.bashrc
    echo "export ADDITIONAL_EMAIL_ADDRESS='colin@datatables.net allan@datatables.net'" >> ~/.bashrc

		######
		# Personal stuff (well Colin's, and he set it up)
		echo "set ic" >> ~/.exrc
		echo "set ai" >> ~/.exrc
		echo "set ts=2" >> ~/.exrc
		echo "set sw=2" >> ~/.exrc
		echo "alias vi='vim'" >> ~/.bashrc
		echo "alias la='ls -a'" >> ~/.bashrc

		######
		# https://stefanscherer.github.io/access-private-github-repos-in-vagrant-up/
    mkdir -p ~/.ssh
    chmod 700 ~/.ssh

		sh /vagrant/setup_git.sh #{ENV['USER']}

		# git clone  https://github.com/DataTables/DataTablesSrc.git
		ssh-keyscan -H github.com >> ~/.ssh/known_hosts
		ssh -T git@github.com
		git clone git@github.com:DataTables/DataTablesSrc.git

		ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts
		ssh -T git@bitbucket.org
		git clone git@bitbucket.org:sprymedia/editor.git

		# Needed for email notifications
		git clone git@bitbucket.org:sprymedia/datatables-site.git
		sudo cp datatables-site/test/tools/ssmtp.conf /etc/ssmtp/ssmtp.conf
    sudo cp datatables-site/test/tools/revaliases /etc/ssmtp/revaliases

		mkdir -p DataTablesSrc/extensions
		cd DataTablesSrc/extensions
		ln -s ~/editor Editor
		cd ..
		npm install
		cd build
		./make.sh all debug

		# ugly way of common code in case editor doesn't get checked out
		# vagrant doesn't seem to support conditionals, will check at some point in the future
		mkdir -p /home/vagrant/DataTablesSrc/built/DataTables/extensions/Editor/php
		cp /vagrant/config.php /home/vagrant/DataTablesSrc/built/DataTables/extensions/Editor/php
  SHELL
  config.vm.provision "shell", inline: <<-SHELL
		##################################
		# Configure stuff
		##################################

		######
    # Some env stuff
    echo "export EMAIL_ADDRESS='notify@datatables.net'" >> ~/.bashrc
    echo "export ADDITIONAL_EMAIL_ADDRESS='colin@datatables.net allan@datatables.net'" >> ~/.bashrc
	
		######
		# Personal stuff (well Colin's, and he set it up)
		echo "set ic" >> ~/.exrc
		echo "set ai" >> ~/.exrc
		echo "set ts=2" >> ~/.exrc
		echo "set sw=2" >> ~/.exrc
		echo "alias vi='vim'" >> ~/.bashrc
		echo "alias la='ls -a'" >> ~/.bashrc

		######
		# nginx
		######
		echo "Modify conf files"
		sudo sed -i 's/user nginx/user vagrant/g' /etc/nginx/nginx.conf
		sudo sed -i 's/worker_processes auto/worker_processes 1/g' /etc/nginx/nginx.conf
		sudo sed -i 's~user = apache~user = vagrant~g' /etc/php-fpm.d/www.conf
		sudo sed -i 's~group = apache~group = vagrant~g' /etc/php-fpm.d/www.conf
		sudo sed -i 's~listen.acl_users = apache,nginx~listen.acl_users = apache,nginx,vagrant~g' /etc/php-fpm.d/www.conf

		# Link to build area
		sudo mv /usr/share/nginx/html /usr/share/nginx/html.ORIG
		sudo ln -s /home/vagrant/DataTablesSrc/built/DataTables /usr/share/nginx/html

		echo "Start web stuff"
		sudo service nginx start
		sudo systemctl enable nginx
		sudo service php-fpm start
		sudo systemctl enable php-fpm

		######
		# MySQL
		######
		echo Starting services
		sudo sed -i 's/# default-authentication-plugin=mysql_native_password/default-authentication-plugin=mysql_native_password/g' /etc/my.cnf

		systemctl start mysqld.service
		systemctl enable mysqld.service

		echo "Configuring MySQL"
		# sometimes mysqld longer to start, should find a tidy way of doing this
		sleep 2
		export PASSWORD=$(grep 'A temporary password is generated for root@localhost' /var/log/mysqld.log |tail -1 | awk '{print $NF}')
		sudo cp /vagrant/my.cnf /root/.my.cnf
		sudo echo "password = $PASSWORD" >> /root/.my.cnf
		sudo mysql --connect-expired-password < /vagrant/change_root_password.sql
		sudo cp /vagrant/my.cnf /root/.my.cnf
		sudo echo "password = Pa55word123." >> /root/.my.cnf
		mysql < /vagrant/create_test_database.sql

		echo "Creating tables"
		# mkdir and touch a very ugly way of checking to see if the editor clone worked
		mkdir -p /home/vagrant/DataTablesSrc/built/DataTables/extensions/Editor/examples/sql
		touch /home/vagrant/DataTablesSrc/built/DataTables/extensions/Editor/examples/sql/mysql.sql
		mysql test < /home/vagrant/DataTablesSrc/built/DataTables/extensions/Editor/examples/sql/mysql.sql

		sudo mysql < /vagrant/create_sa_user.sql
  SHELL
end
